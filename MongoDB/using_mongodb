1. Create a database called 'my_first_db'.

> use my_first_db

2. Create students collection.

> db.createCollection('students')

3. Each document you insert into this collection should have the following format: ({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}})

> db.students.insert({name: 'Augustin Kim', home_state: 'California', lucky_number: 14, birthday: {month: 4, day: 11, year: 1995}})

4. Create 5 students with the appropriate info.

> db.students.insert({name: 'Paul Kim', home_state: 'California', lucky_number: 1, birthday: {month: 5, day: 19, year: 1990}})
> db.students.insert({name: 'Joanne Kim', home_state: 'California', lucky_number: 2, birthday: {month: 10, day: 3, year: 1991}})
> db.students.insert({name: 'Jessica Kim', home_state: 'California', lucky_number: 3, birthday: {month: 3, day: 1, year: 1992}})
> db.students.insert({name: 'Brandon Kim', home_state: 'California', lucky_number: 4, birthday: {month: 3, day: 14, year: 1993}})
> db.students.insert({name: 'Josh Kim', home_state: 'California', lucky_number: 5, birthday: {month: 9, day: 23, year: 1994}})

5. Get all students.

> db.students.find().pretty()

6. Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).

> db.students.find({home_state: {$in: ['California', 'Washington']}})

7. Get all students whose lucky number is greater than 3

> db.students.find({lucky_number: {$gt: 3}})

8. Get all students whose lucky number is less than or equal to 10

> db.students.find({lucky_number: {$lte: 10}})

9. Get all students whose lucky number is between 1 and 9 (inclusive)

> db.students.find({lucky_number: {$gte: 1, $lte: 9}})

10. Add a field to each student collection called 'interests' that is an ARRAY. It should contain the following entries: 'coding', 'brunch', 'MongoDB'. Do this in ONE operation.

> db.students.update({}, {'$set': {'interests': ['coding', 'brunch', 'MongoDB']}}, false, true)

11. Add some unique interests for each particular student into each of their interest arrays.

> db.students.updateOne({name: 'Augustin'}, {$push: {interests: 'photography'}})
> db.students.updateOne({name: 'Paul'}, {$push: {interests: 'cooking'}})
> db.students.updateOne({name: 'Joanne'}, {$push: {interests: 'painting'}})
> db.students.updateOne({name: 'Jessica'}, {$push: {interests: 'gaming'}})
> db.students.updateOne({name: 'Brandon'}, {$push: {interests: 'basketball'}})
> db.students.updateOne({name: 'Josh'}, {$push: {interests: 'cars'}})

12. Add the interest 'taxes' into someone's interest array.

> db.students.update({name: 'Joanne'}, {$push: {interests: 'taxes'}})

13. Remove the 'taxes' interest you just added.

> db.students.update({name: 'Joanne'}, {$pull: {interests: 'taxes'}})

14. Remove all students who are from California.

> db.students.remove({home_state: 'California'})

15. Remove a student by name.

> db.students.remove({name: 'Josh'})

16. Remove a student whose lucky number is greater than 5 (JUST ONE)

> db.students.deleteOne({lucky_number: {$gt: 5}})

17. Add a field to each student collection called 'number_of_belts' and set it to 0.

> db.students.update({}, {'$set': {'number_of_belts': 0}}, false, true)

18. Increment this field by 1 for all students in Washington (Seattle Dojo).

> db.students.updateMany({home_state: 'Washington'}, {$inc: {number_of_belts: 1}})
--- OR ---
> db.students.update({home_state: 'Washington'}, {$inc: {number_of_belts: 1}}, , {multi: true})

19. Rename the 'number_of_belts' field to 'belts_earned'

> db.students.updateMany({}, {$rename: {'number_of_belts': 'belts_earned'}})

20. Remove the 'lucky_number' field.

> db.students.updateMany({}, {$unset: {lucky_number: 1}})

21. Add an 'updated_on' field, and set the value as the current date.

> db.students.update({}, {'$set': {'updated_on': {$currentDate: Date()}}}, false, true)